@model IEnumerable<Article>
@using System.Text.RegularExpressions;
@{
    ViewBag.Title = "Makaleler";
}
@section styles{
}
<h2>Articles</h2>
<hr />
<p>
    @Html.ActionLink("Create New Article", "Create", null, htmlAttributes: new { @class = "btn btn-success" })
</p>
<table id="myTable" class="table table-striped table-bordered" width:"100%">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Text)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsActive)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedDate)
            </th>
            <th>Edit</th>
            <th>Details</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @if (item.Title != null && item.Title.Length > 200)
                    {
                        @Html.DisplayName(item.Title.Substring(0, 200))
                    }
                    else
                    {
                        @Html.DisplayName(item.Title)
                    }
                </td>
                <td>
                    @if (item.Text != null && item.Text.Length > 100)
                    {
                        @Html.Raw(Regex.Replace(item.Text, @"<[^>]*>", "").Substring(0, 200));
                    }
                    else
                    {
                        @Html.Raw(item.Text)
                    }
                </td>
                <td>
                    @if (item.Description != null && item.Description.Length > 2000)
                    {
                        @Html.DisplayName(item.Description.ToString().Substring(0, 100))
                    }
                    else
                    {
                        @Html.DisplayName(item.Description)
                    }
                </td>
                <td>
                    @if (item.IsActive == true)
                    {

                        <i class="fa fa-check-circle" style="color:green;font-size:16px" /><span class="align-text-bottom font-weight-bold">@Html.DisplayName(" Aktif")</span>
                    }
                    else
                    {
                        <i class="fa fa-times-circle" style="color:red" /><span class="align-text-bottom font-weight-bold">@Html.DisplayName(" Pasif")</span>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdatedDate)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-primary" })
                </td>
                <td>
                    @Html.ActionLink("Details", "Details", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-info" })
                </td>
                <td>
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, htmlAttributes: new { @class = "btn btn-danger" })
                </td>
            </tr>
        }
    </tbody>
</table>

@section scripts{ }